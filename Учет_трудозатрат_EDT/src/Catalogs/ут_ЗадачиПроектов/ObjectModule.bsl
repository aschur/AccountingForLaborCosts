
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	КонтрольНаУникальностьКодаЗадачи(Отказ);
	
КонецПроцедуры

Процедура КонтрольНаУникальностьКодаЗадачи(Отказ)
	
	Если Не ЗначениеЗаполнено(КодЗадачи) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Владелец) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ут_ЗадачиПроектов.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.ут_ЗадачиПроектов КАК ут_ЗадачиПроектов
	               |ГДЕ
	               |	ут_ЗадачиПроектов.Ссылка <> &Ссылка
	               |	И ут_ЗадачиПроектов.Владелец = &Владелец
	               |	И ут_ЗадачиПроектов.КодЗадачи = &КодЗадачи";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Владелец", Владелец);
	Запрос.УстановитьПараметр("КодЗадачи", КодЗадачи);
	РезЗапроса = Запрос.Выполнить();
	Если Не РезЗапроса.Пустой() Тогда
		
		Выборка = РезЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ШаблонСообщения = НСтр("ru = 'Уже есть задача проектов: %1 с таким же кодом задачи %2'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Выборка.Ссылка, КодЗадачи);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,Выборка.Ссылка,,,Отказ);	
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ПолноеНаименование = ТекстЗаполнения;
	
КонецПроцедуры

